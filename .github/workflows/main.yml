# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # Java, Chrome, chromedriver, Firefox, geckodriver are installed by default on this machine.
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - PY_VER: py38
            python-version: 3.8
          - PY_VER: py39
            python-version: 3.9
          - PY_VER: py310
            python-version: '3.10'
          - PY_VER: py311
            python-version: '3.11'
          - PY_VER: py312
            python-version: '3.12'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Install test dependencies
        run: pip install tox

      - name: Set env
        run: |
          echo "DISPLAY=:99.0" >> $GITHUB_ENV
          echo "XAUTHORITY=/.Xauthority" >> $GITHUB_ENV

      - name: Install selenium server
        run: |
          wget https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.3.0/selenium-server-4.3.0.jar -O selenium-server.jar

      # Lint before running unit tests
      - name: Run lint
        run: tox -e ${{matrix.PY_VER}}-lint

      # Runs a set of commands using the runners shell
      - name: Run tests
        run: |
          echo "Start Selenium Server"
          xvfb-run java -jar selenium-server.jar standalone > selenium-server.log 2>&1 &
          timeout 60 bash -c 'while ! wget -O /dev/null -T 1 http://localhost:4444/readyz; do echo waiting for Selenium Server; sleep 1; done' || (cat selenium-server.log && exit 2)
          echo "Selenium server is ready, running tests"
          tox -e ${{matrix.PY_VER}}-standard
          tox -e ${{matrix.PY_VER}}-xdist

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs
          path: logs/**/*

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          verbose: true
